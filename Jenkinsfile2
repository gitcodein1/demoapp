pipeline {
    agent {
        label 'node2'
    }
    tools {
        maven 'maven3'
    }
    environment {     
        DOCKERHUB_CREDENTIALS= credentials('dockercreds')     
    }
    stages {
        stage("Maven Build") {
            steps {
                sh 'mvn -s settings.xml package'
            }
        }
        stage("Upload Maven Artifact") {
            steps { 
                script {
                    def mvnPom = readMavenPom file: 'pom.xml'
                    def nexusRepo = mvnPom.version.endsWith("SNAPSHOT") ? "demo-maven-snapshot-hosted-repo" : "demo-maven-release-hosted-repo"              
                    nexusArtifactUploader artifacts: [[artifactId: 'demo-app', classifier: '', file: "target/demo-app-${mvnPom.version}.war", type: 'war']],
                                                        credentialsId: 'nexuscred',
                                                        groupId: 'com.demo', 
                                                        nexusUrl: 'localhost:1081',
                                                        nexusVersion: 'nexus3',
                                                        protocol: 'http', 
                                                        repository: nexusRepo, 
                                                        version: "${mvnPom.version}"
                }
            }
        }
        stage("Build And Push Docker Image") {
            steps {
                script {
                    sh '''
                        VERSION=$(mvn -q \
                        -Dexec.executable=echo \
                        -Dexec.args='${project.version}' \
                        --non-recursive \
                        exec:exec)
                        
                        echo "Pull Base Image From Proxy Repo"
                        docker pull ecf8-183-87-250-107.ngrok-free.app/tomcat:alpine

                        echo "Tag the Pulled Image"
                        docker tag ecf8-183-87-250-107.ngrok-free.app/tomcat:alpine tomcat:alpine
                        
                        echo "Build Image"
                        docker build -t b16a-183-87-250-107.ngrok-free.app/demoapp:$VERSION .

                        echo "Login To Docker Registry"
                        echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin b16a-183-87-250-107.ngrok-free.app
                        
                        echo "Push the Build Image"
                        docker push b16a-183-87-250-107.ngrok-free.app/demoapp:$VERSION
                        '''
                }
            }
        }
    }
    post {
        always {
            sh '''
                VERSION=$(mvn -q \
                        -Dexec.executable=echo \
                        -Dexec.args='${project.version}' \
                        --non-recursive \
                        exec:exec)
                docker rmi b16a-183-87-250-107.ngrok-free.app/demoapp:$VERSION ecf8-183-87-250-107.ngrok-free.app/tomcat:alpine tomcat:alpine
                docker logout
            '''
        }
    }
}
